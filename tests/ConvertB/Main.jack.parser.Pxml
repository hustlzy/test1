<jn-class>
    <class-name>Main</class-name>
    <jn-var-decs>
    </jn-var-decs>
    <jn-subr-decs>
        <jn-function>
            <vtype>void</vtype>
            <name>main</name>
            <jn-param-list>
            </jn-param-list>
            <jn-subr-body>
                <jn-var-decs>
                    <jn-var-dec>
                        <segment>local</segment>
                        <name>result</name>
                        <offset>0</offset>
                        <type>int</type>
                    </jn-var-dec>
                    <jn-var-dec>
                        <segment>local</segment>
                        <name>value</name>
                        <offset>1</offset>
                        <type>int</type>
                    </jn-var-dec>
                </jn-var-decs>
                <jn-statements>
                    <jn-do>
                        <jn-subr-call>
                        <method-call>false</method-call>
                        <class-name>Main</class-name>
                        <subr-name>fillMemory</subr-name>
                            <jn-expr-list>
                                <jn-int>
                                    <ic>8001</ic>
                                </jn-int>
                                <jn-int>
                                    <ic>16</ic>
                                </jn-int>
                                <jn-unary-op>
                                    <op>-</op>
                                    <jn-int>
                                        <ic>1</ic>
                                    </jn-int>
                                </jn-unary-op>
                            </jn-expr-list>
                        </jn-subr-call>
                    </jn-do>
                    <jn-let>
                        <jn-var>
                            <segment>local</segment>
                            <name>value</name>
                            <offset>1</offset>
                            <type>int</type>
                        </jn-var>
                        <jn-subr-call>
                        <method-call>false</method-call>
                        <class-name>Memory</class-name>
                        <subr-name>peek</subr-name>
                            <jn-expr-list>
                                <jn-int>
                                    <ic>8000</ic>
                                </jn-int>
                            </jn-expr-list>
                        </jn-subr-call>
                    </jn-let>
                    <jn-do>
                        <jn-subr-call>
                        <method-call>false</method-call>
                        <class-name>Main</class-name>
                        <subr-name>convert</subr-name>
                            <jn-expr-list>
                                <jn-var>
                                    <segment>local</segment>
                                    <name>value</name>
                                    <offset>1</offset>
                                    <type>int</type>
                                </jn-var>
                            </jn-expr-list>
                        </jn-subr-call>
                    </jn-do>
                    <jn-return>
                    </jn-return>
                </jn-statements>
            </jn-subr-body>
        </jn-function>
        <jn-function>
            <vtype>void</vtype>
            <name>convert</name>
            <jn-param-list>
                <jn-var-dec>
                    <segment>argument</segment>
                    <name>value</name>
                    <offset>0</offset>
                    <type>int</type>
                </jn-var-dec>
            </jn-param-list>
            <jn-subr-body>
                <jn-var-decs>
                    <jn-var-dec>
                        <segment>local</segment>
                        <name>mask</name>
                        <offset>0</offset>
                        <type>int</type>
                    </jn-var-dec>
                    <jn-var-dec>
                        <segment>local</segment>
                        <name>position</name>
                        <offset>1</offset>
                        <type>int</type>
                    </jn-var-dec>
                    <jn-var-dec>
                        <segment>local</segment>
                        <name>loop</name>
                        <offset>2</offset>
                        <type>boolean</type>
                    </jn-var-dec>
                </jn-var-decs>
                <jn-statements>
                    <jn-let>
                        <jn-var>
                            <segment>local</segment>
                            <name>loop</name>
                            <offset>2</offset>
                            <type>boolean</type>
                        </jn-var>
                        <jn-bool>
                            <tf>true</tf>
                        </jn-bool>
                    </jn-let>
                    <jn-while>
                        <jn-var>
                            <segment>local</segment>
                            <name>loop</name>
                            <offset>2</offset>
                            <type>boolean</type>
                        </jn-var>
                        <jn-statements>
                            <jn-let>
                                <jn-var>
                                    <segment>local</segment>
                                    <name>position</name>
                                    <offset>1</offset>
                                    <type>int</type>
                                </jn-var>
                                <jn-infix-op>
                                    <jn-var>
                                        <segment>local</segment>
                                        <name>position</name>
                                        <offset>1</offset>
                                        <type>int</type>
                                    </jn-var>
                                    <op>+</op>
                                    <jn-int>
                                        <ic>1</ic>
                                    </jn-int>
                                </jn-infix-op>
                            </jn-let>
                            <jn-let>
                                <jn-var>
                                    <segment>local</segment>
                                    <name>mask</name>
                                    <offset>0</offset>
                                    <type>int</type>
                                </jn-var>
                                <jn-subr-call>
                                <method-call>false</method-call>
                                <class-name>Main</class-name>
                                <subr-name>nextMask</subr-name>
                                    <jn-expr-list>
                                        <jn-var>
                                            <segment>local</segment>
                                            <name>mask</name>
                                            <offset>0</offset>
                                            <type>int</type>
                                        </jn-var>
                                    </jn-expr-list>
                                </jn-subr-call>
                            </jn-let>
                            <jn-do>
                                <jn-subr-call>
                                <method-call>false</method-call>
                                <class-name>Memory</class-name>
                                <subr-name>poke</subr-name>
                                    <jn-expr-list>
                                        <jn-infix-op>
                                            <jn-int>
                                                <ic>9000</ic>
                                            </jn-int>
                                            <op>+</op>
                                            <jn-var>
                                                <segment>local</segment>
                                                <name>position</name>
                                                <offset>1</offset>
                                                <type>int</type>
                                            </jn-var>
                                        </jn-infix-op>
                                        <jn-var>
                                            <segment>local</segment>
                                            <name>mask</name>
                                            <offset>0</offset>
                                            <type>int</type>
                                        </jn-var>
                                    </jn-expr-list>
                                </jn-subr-call>
                            </jn-do>
                            <jn-if-else>
                                <jn-unary-op>
                                    <op>~</op>
                                    <jn-infix-op>
                                        <jn-var>
                                            <segment>local</segment>
                                            <name>position</name>
                                            <offset>1</offset>
                                            <type>int</type>
                                        </jn-var>
                                        <op>&gt;</op>
                                        <jn-int>
                                            <ic>16</ic>
                                        </jn-int>
                                    </jn-infix-op>
                                </jn-unary-op>
                                <jn-statements>
                                    <jn-if-else>
                                        <jn-unary-op>
                                            <op>~</op>
                                            <jn-infix-op>
                                                <jn-infix-op>
                                                    <jn-var>
                                                        <segment>argument</segment>
                                                        <name>value</name>
                                                        <offset>0</offset>
                                                        <type>int</type>
                                                    </jn-var>
                                                    <op>&amp;</op>
                                                    <jn-var>
                                                        <segment>local</segment>
                                                        <name>mask</name>
                                                        <offset>0</offset>
                                                        <type>int</type>
                                                    </jn-var>
                                                </jn-infix-op>
                                                <op>=</op>
                                                <jn-int>
                                                    <ic>0</ic>
                                                </jn-int>
                                            </jn-infix-op>
                                        </jn-unary-op>
                                        <jn-statements>
                                            <jn-do>
                                                <jn-subr-call>
                                                <method-call>false</method-call>
                                                <class-name>Memory</class-name>
                                                <subr-name>poke</subr-name>
                                                    <jn-expr-list>
                                                        <jn-infix-op>
                                                            <jn-int>
                                                                <ic>8000</ic>
                                                            </jn-int>
                                                            <op>+</op>
                                                            <jn-var>
                                                                <segment>local</segment>
                                                                <name>position</name>
                                                                <offset>1</offset>
                                                                <type>int</type>
                                                            </jn-var>
                                                        </jn-infix-op>
                                                        <jn-int>
                                                            <ic>1</ic>
                                                        </jn-int>
                                                    </jn-expr-list>
                                                </jn-subr-call>
                                            </jn-do>
                                        </jn-statements>
                                        <jn-statements>
                                            <jn-do>
                                                <jn-subr-call>
                                                <method-call>false</method-call>
                                                <class-name>Memory</class-name>
                                                <subr-name>poke</subr-name>
                                                    <jn-expr-list>
                                                        <jn-infix-op>
                                                            <jn-int>
                                                                <ic>8000</ic>
                                                            </jn-int>
                                                            <op>+</op>
                                                            <jn-var>
                                                                <segment>local</segment>
                                                                <name>position</name>
                                                                <offset>1</offset>
                                                                <type>int</type>
                                                            </jn-var>
                                                        </jn-infix-op>
                                                        <jn-int>
                                                            <ic>0</ic>
                                                        </jn-int>
                                                    </jn-expr-list>
                                                </jn-subr-call>
                                            </jn-do>
                                        </jn-statements>
                                    </jn-if-else>
                                </jn-statements>
                                <jn-statements>
                                    <jn-let>
                                        <jn-var>
                                            <segment>local</segment>
                                            <name>loop</name>
                                            <offset>2</offset>
                                            <type>boolean</type>
                                        </jn-var>
                                        <jn-bool>
                                            <tf>false</tf>
                                        </jn-bool>
                                    </jn-let>
                                </jn-statements>
                            </jn-if-else>
                        </jn-statements>
                    </jn-while>
                    <jn-return>
                    </jn-return>
                </jn-statements>
            </jn-subr-body>
        </jn-function>
        <jn-function>
            <vtype>int</vtype>
            <name>nextMask</name>
            <jn-param-list>
                <jn-var-dec>
                    <segment>argument</segment>
                    <name>mask</name>
                    <offset>0</offset>
                    <type>int</type>
                </jn-var-dec>
            </jn-param-list>
            <jn-subr-body>
                <jn-var-decs>
                </jn-var-decs>
                <jn-statements>
                    <jn-if-else>
                        <jn-infix-op>
                            <jn-var>
                                <segment>argument</segment>
                                <name>mask</name>
                                <offset>0</offset>
                                <type>int</type>
                            </jn-var>
                            <op>=</op>
                            <jn-int>
                                <ic>0</ic>
                            </jn-int>
                        </jn-infix-op>
                        <jn-statements>
                            <jn-return-expr>
                                <jn-int>
                                    <ic>1</ic>
                                </jn-int>
                            </jn-return-expr>
                        </jn-statements>
                        <jn-statements>
                            <jn-return-expr>
                                <jn-infix-op>
                                    <jn-var>
                                        <segment>argument</segment>
                                        <name>mask</name>
                                        <offset>0</offset>
                                        <type>int</type>
                                    </jn-var>
                                    <op>*</op>
                                    <jn-int>
                                        <ic>2</ic>
                                    </jn-int>
                                </jn-infix-op>
                            </jn-return-expr>
                        </jn-statements>
                    </jn-if-else>
                </jn-statements>
            </jn-subr-body>
        </jn-function>
        <jn-function>
            <vtype>void</vtype>
            <name>fillMemory</name>
            <jn-param-list>
                <jn-var-dec>
                    <segment>argument</segment>
                    <name>startAddress</name>
                    <offset>0</offset>
                    <type>int</type>
                </jn-var-dec>
                <jn-var-dec>
                    <segment>argument</segment>
                    <name>length</name>
                    <offset>1</offset>
                    <type>int</type>
                </jn-var-dec>
                <jn-var-dec>
                    <segment>argument</segment>
                    <name>value</name>
                    <offset>2</offset>
                    <type>int</type>
                </jn-var-dec>
            </jn-param-list>
            <jn-subr-body>
                <jn-var-decs>
                </jn-var-decs>
                <jn-statements>
                    <jn-while>
                        <jn-infix-op>
                            <jn-var>
                                <segment>argument</segment>
                                <name>length</name>
                                <offset>1</offset>
                                <type>int</type>
                            </jn-var>
                            <op>&gt;</op>
                            <jn-int>
                                <ic>0</ic>
                            </jn-int>
                        </jn-infix-op>
                        <jn-statements>
                            <jn-do>
                                <jn-subr-call>
                                <method-call>false</method-call>
                                <class-name>Memory</class-name>
                                <subr-name>poke</subr-name>
                                    <jn-expr-list>
                                        <jn-var>
                                            <segment>argument</segment>
                                            <name>startAddress</name>
                                            <offset>0</offset>
                                            <type>int</type>
                                        </jn-var>
                                        <jn-var>
                                            <segment>argument</segment>
                                            <name>value</name>
                                            <offset>2</offset>
                                            <type>int</type>
                                        </jn-var>
                                    </jn-expr-list>
                                </jn-subr-call>
                            </jn-do>
                            <jn-let>
                                <jn-var>
                                    <segment>argument</segment>
                                    <name>length</name>
                                    <offset>1</offset>
                                    <type>int</type>
                                </jn-var>
                                <jn-infix-op>
                                    <jn-var>
                                        <segment>argument</segment>
                                        <name>length</name>
                                        <offset>1</offset>
                                        <type>int</type>
                                    </jn-var>
                                    <op>-</op>
                                    <jn-int>
                                        <ic>1</ic>
                                    </jn-int>
                                </jn-infix-op>
                            </jn-let>
                            <jn-let>
                                <jn-var>
                                    <segment>argument</segment>
                                    <name>startAddress</name>
                                    <offset>0</offset>
                                    <type>int</type>
                                </jn-var>
                                <jn-infix-op>
                                    <jn-var>
                                        <segment>argument</segment>
                                        <name>startAddress</name>
                                        <offset>0</offset>
                                        <type>int</type>
                                    </jn-var>
                                    <op>+</op>
                                    <jn-int>
                                        <ic>1</ic>
                                    </jn-int>
                                </jn-infix-op>
                            </jn-let>
                        </jn-statements>
                    </jn-while>
                    <jn-return>
                    </jn-return>
                </jn-statements>
            </jn-subr-body>
        </jn-function>
    </jn-subr-decs>
</jn-class>
